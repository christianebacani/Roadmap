I notice I haven't written any advice posts recently. Here is a collection of my advice posts pre 2020.	Keywords: '2020, Recently, Written, Haven, Pre'
I've been feeling all this elderly wisdom pent up in me, ready to pour at any moment. So here it goes. Get ready to quench your thirst from my fount of wisdom. No man, think for yourself, only get what works for you.	Keywords: 'Thirst, Elderly, Wisdom, Quench, Pour'
It is called foundations, not theory	Keywords: 'Foundations, Theory, Called'
Foundations of computer science (or rather any field of study) are the most important topics you can learn. These lay down the frame of thinking/perspective for that area of study. Yet, I am saddened to hear these called as "theory", and labeled as "unpractical". This couldn't be farther from the truth	Keywords: 'Saddened, Science, Important, Unpractical, Computer'
Take a look at how I recommend studying distributed systems. Don't you dare call this "theory" and "unpractical". This lays the bedrock that you build your practice on. Don't skimp on the foundations. Don't build your home on quicksand	Keywords: 'Studying, Quicksand, Practice, Theory, Skimp'
Keep your hands dirty, your mind clean	Keywords: 'Clean, Hands, Dirty, Mind'
True understanding comes from applying what you've learned. If you don't put to practice what you learn, you haven't really learned it, have you?	Keywords: 'Practice, Learned, Learn, Understanding, Applying'
So, keep your hands dirty in your field of study. If you don't write and experiment with TLA+ spec, you won't truly understand how things can go awry with your distributed systems design. If you don't write low level implementations and later observe them in production, you won't really understand which issues to prioritize for your distributed systems designs.	Keywords: 'Study, Dirty, Awry, Issues, Experiment'
I say keep your mind clean, because you should not get lost in the implementation details, and you should see the mapping to the high level algorithm, and to the foundational concepts. Chances are that you will figure out a simpler way of doing the concrete work by mapping it back to the abstract plane, if you keep a foot in each plane.	Keywords: 'Algorithm, Mapping, Clean, Simpler, Work'
Ship something, anything, weekly	Keywords: 'Weekly, Ship'
A bee that doesn't produce honey is just a pest. Producing something small each week is key to keep your muscles from atrophy. Think of it as investing in your skills piggy bank every week. This way you also accumulate work that you can later draw on to compose something bigger.	Keywords: 'Week, Piggy, Investing, Pest, Atrophy'
What you ship can be as small as improving a piece of documentation at work. Or you can maintain a blog that nobody reads, and summarize what you learned each week. My blog didn't get any pageviews in the first three years. One day someone (often your future self) will appreciate those contributions	Keywords: 'Blog, Week, Day, Pageviews, Small'
Do good and throw it in to the sea. If the fish don't appreciate it, God will. - Middle Eastern Proverb	Keywords: 'Fish, Sea, Throw, Proverb, God'
Cram for the deadlines, put your heart into it	Keywords: 'Deadlines, Cram, Heart'
Without deadlines nothing gets done. Don't be afraid to put your heart into your work to ship on a deadline. When there is a will, there is a way. Your desperate attempts at making something happen would often lead to your most focused and productive (and sometimes creative) work.	Keywords: 'Deadlines, Desperate, Deadline, Productive, Work'
Yes, don't burn yourself out, but also don't back away from a good fight. Sweat and tear equity is important, this is how you grow. Draw from your emotional strength, and don't forget to replenish it with self-care (exercising, hobbies, and meditation).	Keywords: 'Sweat, Meditation, Exercising, Emotional, Strength'
Ask and you shall receive	Keywords: 'Receive, Ask, Shall'
Young people, and introvert people of all ages, are often too shy and too late to ask. They also don't realize how heavily they get penalized for this. Steve Jobs has the following vital advice about asking	Keywords: 'Shy, Introvert, Young, Penalized, Late'
Don't make assumptions about why something would never work. Some people are are too lazy (fearful?) to even Google for information out of their conundrum. Getting help from ample online resources is important, but asking help from the people who have gone through the same journey is even more important. Let me illustrate with a Nasreddin Hoca story. Hoca falls from his roof while trying to mend it. He is in pain on the ground, unable to get up. All the neighbors crowd him, saying that they should fetch for a healer. Hoca stops them, and tells them "Nevermind the healer, first find me someone who fell from a roof. I need that guy's advice first." This story talks about the importance of real-life first-hand experience.	Keywords: 'Pain, Lazy, Fearful, Healer, Google'
People skills are very important	Keywords: 'Important, Skills, People'
The point about asking people for help brings us to the topic of people skills, so called "soft skills". I don't get what is soft about these skills, these are the hardest skills to master and the most crucial for success. But again, most young people fail to recognize how important these are. Heck, I still blunder on these.	Keywords: 'Hardest, Crucial, Blunder, Help, Skills'
Since these are hard, I don't have good advice here, other than to say, find yourself good mentors. Make sure they are the right mentors, and they are good people. (How do you know this? Yeah, soft skills, my ass!) Be open with them. Be coachable, and not obstinate. Don't waste their time.	Keywords: 'Coachable, Mentors, Obstinate, Skills, Advice'
Learn to communicate well. Spend many folds more time than you think is sufficient to improve your writing and presentation. Not a second of this work goes to waste. Really, just read through the Writing/Presenting section here.	Keywords: 'Learn, Improve, Work, Presenting, Writing'
Manage the stories you tell yourself	Keywords: 'Stories, Manage, Tell'
The stories we tell ourselves (knowingly or unknowingly) are very important, because they determine how we manage our emotions, which in turn determine our success.	Keywords: 'Knowingly, Emotions, Important, Success, Manage'
You should cherish your small successes to build motivation. You might get demoralized from failures, but you can reframe them to learn from them, and use them as leverage to drive to your next small success. You can even change the narrative on failures as a setback in your hero's journey	Keywords: 'Motivation, Setback, Demoralized, Cherish, Hero'
Cultivate deep focus through deliberate practice	Keywords: 'Deliberate, Practice, Focus, Deep, Cultivate'
I have written about these earlier. It is important to cultivate deep work through practice. Human brain is programmed to save energy and go easy on itself, so it prefers shallow tasks (such as watching TV, web browsing, answering emails) and tries to avoid intense thinking sessions required for many creative tasks such as writing, thinking on a proof, and designing an algorithm. As a result, we accumulate a lot of bad studying habits: we seem to be working but we take it slow, we get distracted with other thoughts and break our concentration. In other words, unless we are deliberate about it, it is easy to switch to a superficial shallow work mode, rather than an effective deep work mode.	Keywords: 'Distracted, Emails, Studying, Deliberate, Algorithm'
