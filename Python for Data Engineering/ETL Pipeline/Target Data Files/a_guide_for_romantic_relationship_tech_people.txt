								'A Guide to Romantic Relationships for ̶d̶u̶m̶m̶i̶e̶s̶ Tech People'

A few weekends ago, I had lunch with some friends.
We were having our quarterly life catch-up just discussing what we had been up to and how our lives were going.
It was the usual stuff;
Work, fitness, holidays and the latest albums by some of our favourite musicians.
I don’t remember how it happened, but the conversation switched to relationships, and I knew exactly where it was going to end.
You see, two of my non-tech friends dated people in tech and had bad experiences, so every once in a while, they liked to make fun of ‘my people’.
Nothing serious to be honest, just the kind of banter that is expected with friends.
Their ‘theory’ is that a lot of tech people are “Introverted, nerds who think too logically about everything and may not be in-tune with their emotional side”
To be honest, I don’t know if all that is true.
What I do know is that I don’t want to be at the end of their jokes at our next catch up so I’ve decided to do something about it.
I’ve decided to write a guide to romantic relationships for tech people in a language that they understand.
Think of this as an API documentation or user guide for romantic relationships.

'1. Never assume, Ask.'

If you’ve launched software products I’m sure you understand that users don’t always behave how you expect them to.
It’s quite common, and a popular example is how Instagram started as Burbn, a location photo and note-sharing app but it turned out that people only wanted to use the photo-sharing features. That is what became Instagram.
Screenshots from the Burbn app before it became Instagram
Well, the same thing happens in relationships. You can’t always assume that you know what your partner wants and needs.
You can make informed assumptions, but when in doubt, ask.
You’ll be surprised what you might learn about someone that you thought you knew everything about.

'2. ‘Listen’ to what your users do, not what they say.'

This sounds like a counter to the previous point but it’s not.
If you have ever done user interviews, you know that sometimes users just say what they think you want to hear, other times they don’t even know what they want.
In those scenarios, you need to observe their actions to see what they actually do rather than just listening to what they say.
It can be the same with relationships.
Sometimes you need to see what your partner actually does to understand what they really mean and what they want.
They may not say certain things because they don’t want to hurt your feelings or because they are unsure how to explain them.
This is why it’s important to observe their actions instead.

'3. Communicate clearly, always.'

Clear communication is very important in all aspects of life, from nurturing relationships to building software.
Take payment/bank apps for example.
Which apps do you prefer?
The ones that send you an email/notification when there’s a known issue with processing payments or the ones that don’t say anything and wait till you try to make a payment and your money is lost in oblivion?
It’s the same with relationships. Try as much as you can to communicate your plans, intentions and challenges (if any).
It helps to build trust and assures your partner that you will always let them know if anything is wrong.

'4. Never forget delighters.'

Product delighters are those small things in a software product that are there mostly to excite users. They don’t necessarily have any real functional value but they excite or make customers happy.
A good example is that when you open up the Chrome browser while offline, the dinosaur in the error message turns into a game when you tap the space bar.
The Chrome team didn’t have to add that, but they did and it delights users.
Screenshot of Google Chrome in offline mode
It’s the same in relationships.
Never forget the little things.
A handwritten ‘thank you’ note, restocking their fridge with their favourite snack. These are really small things and you don’t have to do them, but it goes a long way when you do.

'5. Keep iterating.'

When you launch an app what happens next?
Do you just launch and then abandon the app?
No!!! You fix bugs and think of what features to build next!
If you agree with this then why would you treat relationships differently?
Why would you stop doing the things that your partner liked so much when you first met?
Are you fixing your behavioural bugs/issues? Are you thinking of ways to be a better partner? Are you still putting in effort to stay fit and dress well?
Are you willing to iterate and keep improving as a person, as a partner?
These are important questions to ask yourself.
To be honest, I didn’t write this because I’m a love guru or anything like that.
I wrote this because I think there are parallels between tech and relationships and they can be a game changer for any tech person who wants to improve in this aspect of their lives.
I think that just like refining a software product, nurturing a relationship requires ongoing effort, attention to detail, and a willingness to adapt.
With this in mind, I hope tech people feel more equipped to build stronger, more meaningful connections.
I hope ;)
